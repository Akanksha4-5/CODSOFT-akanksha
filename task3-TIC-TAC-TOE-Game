#include <iostream>
using namespace std;

char board[3][3];
char currentPlayer = 'X'; 

// Initializing the game board with 1-9
void initializeBoard() {
    char num = '1';
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            board[i][j] = num++;
}

// Display 
void displayBoard() {
    cout << "\n";
    for (int i = 0; i < 3; i++) {
        cout << " ";
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        if (i < 2) cout << "\n-----------\n";
    }
    cout << "\n\n";
}


bool playerMove() {
    int pos;
    cout << "Player " << currentPlayer << ", enter your move (1-9): ";
    cin >> pos;

    if (cin.fail() || pos < 1 || pos > 9) {
        cin.clear();
        cin.ignore(10000, '\n');
        cout << "Invalid input. Try again.\n";
        return false;
    }

    int row = (pos - 1) / 3;
    int col = (pos - 1) % 3;

    if (board[row][col] == 'X' || board[row][col] == 'O') {
        cout << "Cell already taken. Choose another.\n";
        return false;
    }

   
    board[row][col] = currentPlayer;
    return true;
}


bool checkWin() {
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == currentPlayer &&
            board[i][1] == currentPlayer &&
            board[i][2] == currentPlayer)
            return true;

        if (board[0][i] == currentPlayer &&
            board[1][i] == currentPlayer &&
            board[2][i] == currentPlayer)
            return true;
    }

    if (board[0][0] == currentPlayer &&
        board[1][1] == currentPlayer &&
        board[2][2] == currentPlayer)
        return true;

    if (board[0][2] == currentPlayer &&
        board[1][1] == currentPlayer &&
        board[2][0] == currentPlayer)
        return true;

    return false;
}

// Check for (no empty cells)
bool checkDraw() {
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            if (board[i][j] != 'X' && board[i][j] != 'O')
                return false;
    return true;
}

// Switch the  players
void switchPlayer() {
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

//  Main game loop
void playGame() {
    initializeBoard();
    currentPlayer = 'X';
    bool gameRunning = true;

    while (gameRunning) {
        displayBoard();

        if (!playerMove()) continue;

        if (checkWin()) {
            displayBoard();
            cout << " Player " << currentPlayer << " wins the game!\n";
            gameRunning = false;
        } else if (checkDraw()) {
            displayBoard();
            cout << " it is  a draw!\n";
            gameRunning = false;
        } else {
            switchPlayer();
        }
    }
}

int main() {
    char playAgain;
    do {
        playGame();
        cout << "Do you want to play again? (y/n): ";
        cin >> playAgain;
    } while (playAgain == 'y' || playAgain == 'Y');

    cout << "Thanks for playing!\n";
    return 0;
}


output:


1 | 2 | 3
-----------
 4 | 5 | 6
-----------
 7 | 8 | 9

Player X, enter your move (1-9): 1

 X | 2 | 3
-----------
 4 | 5 | 6
-----------
 7 | 8 | 9

Player O, enter your move (1-9): 3

 X | 2 | O
-----------
 4 | 5 | 6
-----------
 7 | 8 | 9

Player X, enter your move (1-9): 5

 X | 2 | O
-----------
 4 | X | 6
-----------
 7 | 8 | 9

Player O, enter your move (1-9): 6

 X | 2 | O
-----------
 4 | X | O
-----------
 7 | 8 | 9

Player X, enter your move (1-9): 9

 X | 2 | O
-----------
 4 | X | O
-----------
 7 | 8 | X

 Player X wins the game!
Do you want to play again? (y/n): 
=== Session Ended. Please Run the code again ===
